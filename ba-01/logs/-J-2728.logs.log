do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000241994857788
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.09808349609e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.29153442383e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.70363616943e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.08238983154e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.41617584229e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.31673431396e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.67707824707e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.51154327393e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.29425048828e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=8.48770141602e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=9.20295715332e-05
executed snippet estimated_duration=250.0, duration=0.00970506668091
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000144958496094
executed snippet estimated_duration=4.0, duration=0.00105094909668
Script duration 790.0
Run total estimated duration= 791.000
run duration: 0:13:11
doing event level: 2
12:06:21 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4974754320
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ba-01-J-2728
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-J-2728
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
12:06:21 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.15849,0.08657,-0.01162,-0.07087,0.07432,0.00237
12:06:21 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
12:06:21 -- ******* Pre Extraction Check Passed *******
=================================================================================
12:06:21 -- stopping status monitor
stop 4942042512
Status monitor stopped
Status monitor finished
12:06:23 -- starting status monitor
start 4942042512
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 12:06:24.711013
Extraction Started jan_sniffair_x2.py
12:06:24 -- ******* Extraction Started jan_sniffair_x2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x129f86cb0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.41481781006e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.41753387451e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.91549682617e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.58171081543e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.5101852417e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.00121903419495
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.48362731934e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.5101852417e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=8.58306884766e-05
executed snippet estimated_duration=250.0, duration=0.0103919506073
Jan Air Sniff Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.91006469727e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0186080932617
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000244140625
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
12:06:25 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
12:06:25 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=4
12:06:26 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=4
12:06:26 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
12:06:27 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=4
12:06:27 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=4
12:06:27 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
12:06:28 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=4
12:06:29 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
12:06:29 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-T(Microbone to CO2 Laser) software locked
change switch state (True, False)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, False)]
action=close, ok=True, locked=[True]
executed snippet estimated_duration=0, duration=5.1895468235
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000118970870972
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
12:06:30 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=4
12:06:30 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=4
12:06:31 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
12:06:32 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0344429016
executed snippet estimated_duration=48.0, duration=17.924669981
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.79764556885e-05
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=4
12:06:48 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.042069912
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=4
12:07:04 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.8307509422
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.60419464111e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=4
12:07:05 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
12:07:06 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00316500664
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=4
12:07:08 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.46000504494
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.00010085105896
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
12:07:09 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00787496567
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
12:07:11 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0331120491
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.8471231461
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000178813934326
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=4
12:07:28 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0558760166
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=4
12:07:44 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.8245470524
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000141143798828
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=4
12:07:45 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
12:07:46 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01139307022
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=4
12:07:49 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.45569801331
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000235080718994
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
12:07:49 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00641393661
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
12:07:51 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0403151512
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.8683979511
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000237941741943
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=4
12:08:08 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01226401329
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=4
12:08:10 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (30,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0874021053
close ('S',) {}
close name=S desc=---
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close S ===>> OK
GetIndicatorState S ===>> False
change switch state (True, True)
update switch state S False args=() kw={} ncanvase=4
12:08:41 -- CLOSE  VALVE-S (Microbone to Inlet Pipette)
-------------------------- close S () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (3,) {}
SLEEP 3.0
block started
WaitControl setup for 3.0  
Join finished
block finished. duration 3.02189397812
executed snippet estimated_duration=105.0, duration=36.9562399387
SniffPipette2.py completed successfully
gosub finished
executed snippet estimated_duration=250.0, duration=140.411174059
jan_sniffair_x2.py completed successfully
no extraction action
Requested Output= 0.000
Achieved Output=  0.000
no extraction action
no extraction action
no extraction action
no extraction action
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
not connected to db mysql://janexp@129.138.12.160/labspy
using pymysql
4981392016 connecting to database mysql://janexp@129.138.12.160/labspy
create new session 4981392016
testing database connection get_migrate_version
closing test session
close session 4981392016
connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-08-08T11:29:39',
                    'title': 'iServer Hum.',
                    'value': 52.4}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-08-08T12:07:21',
                     'title': None,
                     'value': 103.5},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-08-08T12:07:27',
                     'title': None,
                     'value': 105.88942}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-08-08T11:50:04',
                       'title': None,
                       'value': -195.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-08-08T11:24:37',
                       'title': 'iServer Temp.',
                       'value': 75.7},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-08-08T12:06:54',
                       'title': None,
                       'value': 17.9444444444444}]}
Extraction Finished
12:08:47 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
12:08:47 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 197.923274125618
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0555 5.8790 5.9928 6.1940 6.2303 6.6792
Ar39     6.0103 5.7700 6.0569 6.3371 6.1130 6.5658
Ar36     5.6879 5.4390 5.7203 5.9959 5.7680 6.2168
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.370811206739
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=ba-01-J analysis type=blank_air
Measurement Started jan_unknown400_120.py
12:08:48 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 197.699505585058
GetParameter Source Current Readback ===>> 553.631386193005
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
flush and close file /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
testing...
no interpolation path defined
executed snippet estimated_duration=548.12, duration=0.00017786026001
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02961323e+00]
H1 map mass to dac 39.9624 >> 5.87902
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.878985379) on H1
setting magnet DAC
current  : 5.878986
requested: 5.878985
Delta Dac: 0.000001
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.878985379 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 8.0}
Equilibration Started
12:08:49 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1302b4530>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x130a5f8f0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x12aa7efb0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=4
12:08:49 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=4
12:08:52 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 8.0sec
set_time_zero () {}
sniff (8.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
measuring sniff. ncounts=8.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
12:09:01 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
waiting for write to finish
measurement finished
estimated time: 8.389 actual time: :8.474
flush and close file /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
GetIndicatorState R ===>> False
set "Ar41" to "('linear', 'SEM')"
change switch state (True, True)
set "Ar40" to "('Parabolic', 'SEM')"
update switch state R False args=() kw={} ncanvase=4
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
12:09:01 -- CLOSE  VALVE-R (Jan Inlet)
set "L2" to "('average', 'SEM')"
Post Equilibration Started jan_pump_extraction_line.py
set "L1" to "('average', 'SEM')"
12:09:01 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
testing...
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
no interpolation path defined
add group /signal/Ar41 (Group) '' table H2
calculate duration
add group /signal/Ar40 (Group) '' table H1
testing...
add group /signal/Ar39 (Group) '' table AX
no interpolation path defined
add group /signal/Ar38 (Group) '' table L1
executed snippet estimated_duration=4.0, duration=0.000182867050171
add group /signal/Ar37 (Group) '' table L2
executed snippet estimated_duration=4.0, duration=0.0204730033875
add group /signal/Ar36 (Group) '' table CDD
Pump after analysis
flush and close file /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
doing GOSUB
measuring signal. ncounts=400
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000154972076416
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
"signal" increment series count="2" fit count="1" regressing="True"
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=4
12:09:02 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
starting measurement
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=4
12:09:02 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=4
12:09:04 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=4
12:09:04 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=4
12:09:05 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-T(Microbone to CO2 Laser) software locked
change switch state (True, False)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, False)]
action=open, ok=True, locked=[True]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=4
12:09:05 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': -0.4212753259423431}"
condition Ar36<0.001 is true trips=1/3
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=5.28198719025
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.10079956055e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=4
12:09:07 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=4
12:09:08 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=4
12:09:09 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=4
12:09:10 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=4
12:09:10 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.01932341674328914}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0358360967087125}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.028916088016048645}"
Join finished
block finished. duration 15.0639400482
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=4
12:09:26 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=4
12:09:26 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=19.9589450359
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=25.3030629158
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
12:09:27 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.019849131168135453}"
12:09:27 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.017500186098555987}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.014532537241706106}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.013057745849286338}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.011719171501405067}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.011377339930228924}"
12:09:53 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.010345906440212983}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.009679919976750162}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008966711535235806}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008407469643677138}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007964134214962847}"
12:10:20 -- collecting point 75
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007594515992754541}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007192620145527367}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00693814132805675}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00664247914263803}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006245411212968051}"
12:10:46 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0061242536344081454}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005941799204383187}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0059567583762115345}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005942145530388996}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005842414036197841}"
12:11:12 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005712794585079113}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005643604676608675}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005574582990262961}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005472736132778136}"
set states for children of D. state=False
handle state [('D', False)]
update switch state D False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005379141061346214}"
12:11:38 -- collecting point 150
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005202881034335744}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005172790720545354}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005205867714042907}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005130129105666699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005057939353937235}"
12:12:05 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0050322741313199235}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004969966808903988}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004929349747508395}"
State checksums do not match. Local:-858939653 Remote:541036555
State checksum failed
set states for children of C. state=False
set states for children of B. state=True
handle state [('C', False), ('B', True)]
update switch state C False args=() kw={'refresh': True} ncanvase=4
update switch state B True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0049043548825745045}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004800391598718349}"
12:12:31 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00479277620386415}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004702735961097087}"
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004699214623214626}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004691766235186439}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004649886757661583}"
12:12:57 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004607487576141133}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00462721351724552}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004618205501015801}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004617865068278434}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004545367147844881}"
12:13:24 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004491119240332627}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004446426548065681}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004484522984454146}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004477848094845911}"
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004425069287340039}"
12:13:50 -- collecting point 275
State checksums do not match. Local:754818398 Remote:942092547
State checksum failed
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004326632988990363}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004316065652915796}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004352798963958982}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004357498351657655}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004298645943269238}"
12:14:16 -- collecting point 300
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
set states for children of C. state=True
handle state [('C', True)]
update switch state C True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004257466250178951}"
set states for children of B. state=True
set states for children of D. state=True
handle state [('B', True), ('D', True)]
update switch state B True args=() kw={'refresh': True} ncanvase=4
update switch state D True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004229799324733153}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0042296871092686265}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004179432419360309}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004228471464045115}"
12:14:42 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004239731370534296}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004209048852639735}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004216133812457387}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004168328903326171}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004118379877613531}"
12:15:09 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004076500863026468}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004100734739294405}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004072728124455321}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0040754602751187415}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004029004558669292}"
12:15:35 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004032711029061625}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00400230330344287}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003956993916608212}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003951202284465169}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003942055878664567}"
12:16:01 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.400
flush and close file /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02961323e+00]
H1 map mass to dac 34.2 >> 5.24113160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24110074319) on H1
setting magnet DAC
current  : 5.878985
requested: 5.241101
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24110074319 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08200007468035513}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039417909772272}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08693968604244456}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039417909772272}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07623518181962356}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039417909772272}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06899889400603612}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039417909772272}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06679985452147101}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039417909772272}"
12:16:46 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.062246482285181454}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039417909772272}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06412986565231886}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039417909772272}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06929099794498415}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039417909772272}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06936161149659492}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003938419497570153}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07000055313503781}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003938763526106587}"
12:17:12 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07052391018069804}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039390438456547916}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07438066047894096}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003939276653415165}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07570720511031545}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00393947308496298}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07501689793481456}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039396410481705325}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07656138670857685}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039397863136473345}"
12:17:38 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07469749792210933}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003938035404950996}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0756196446820975}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003936492937766127}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07399127094196004}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039334569825693316}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0734880043748656}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003933900280157516}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07368193562707707}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039328003648084085}"
12:18:05 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07418522060461424}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003933232605790081}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07666672165783658}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039336251916358205}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07473846761696094}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00393398334012667}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07328313800784911}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003934311392105684}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.133
flush and close file /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=6.78538498188 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x133c41a70>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12fd6cef0>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x133c41a70>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12fd6cef0>]
setting integration time = 0.524288
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02961323e+00]
H1 map mass to dac 39.9624 >> 5.87902
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x12fc8f110>
doing pc
starting peak center. center dac= 5.878985379 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87899 width=0.03000 (5.86399 - 5.89399)
Moving to starting dac 5.863985379
setting magnet DAC
current  : 5.241101
requested: 5.863985
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.863985379 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0996495418303. timeout= 10
Peak center baseline intensity achieved
_do_sweep sm= 5.863985379, em= 5.893985379, stm= 0.001
calculated step values: start=5.863985379, end=5.893985379, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.863985
requested: 5.863985
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.863985379 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863985
requested: 5.865020
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86501986176 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865020
requested: 5.866054
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86605434452 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866054
requested: 5.867089
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86708882728 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867089
requested: 5.868123
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86812331004 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868123
requested: 5.869158
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8691577928 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869158
requested: 5.870192
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87019227555 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870192
requested: 5.871227
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87122675831 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871227
requested: 5.872261
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87226124107 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872261
requested: 5.873296
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87329572383 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873296
requested: 5.874330
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87433020659 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874330
requested: 5.875365
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87536468935 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875365
requested: 5.876399
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87639917211 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876399
requested: 5.877434
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87743365486 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877434
requested: 5.878468
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87846813762 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878468
requested: 5.879503
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87950262038 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879503
requested: 5.880537
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88053710314 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880537
requested: 5.881572
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8815715859 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881572
requested: 5.882606
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88260606866 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882606
requested: 5.883641
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88364055142 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883641
requested: 5.884675
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88467503417 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884675
requested: 5.885710
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88570951693 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885710
requested: 5.886744
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88674399969 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886744
requested: 5.887778
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88777848245 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887778
requested: 5.888813
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88881296521 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888813
requested: 5.889847
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88984744797 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889847
requested: 5.890882
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89088193073 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890882
requested: 5.891916
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89191641349 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891916
requested: 5.892951
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89295089624 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892951
requested: 5.893985
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.893985379 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8707489060566118, 5.8785945974393776, 5.8864402888221434], [6.7020425162797128, 9.0080908679511431, 6.6865519143872314], 5.8805184451347685, 9.0080908679511431)
Failed to find a valid peak. No peak greater than 1.0. max = 0.541163304524
Failed to find a valid peak. No peak greater than 1.0. max = 0.142247432309
Failed to find a valid peak. No peak greater than 1.0. max = 0.0184173055455
new center pos Detector(H1) (Ar40) @ 5.87859459744
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87862921614
update mftable H1 Ar40 5.87862921614 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893985
requested: 5.878595
Delta Dac: 0.015391
Checking detector protection. dv=0.01539
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87859459744 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.541163304524
Failed to find a valid peak. No peak greater than 1.0. max = 0.142247432309
Failed to find a valid peak. No peak greater than 1.0. max = 0.0184173055455
flush and close file /Users/jan/PychronDev/data/isotopes/15/4202b1-2d32-47c1-abec-7e295f7e82a1.h5
finished measure script
executed snippet estimated_duration=548.12, duration=615.751435041
jan_unknown400_120.py completed successfully
Measurement Finished
12:19:04 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
12:19:04 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.19345092773e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=4
12:19:04 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.360461950302
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
12:19:04 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-08-08T11:29:39',
                    'title': 'iServer Hum.',
                    'value': 52.4}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-08-08T12:17:22',
                     'title': None,
                     'value': 91.725},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-08-08T12:17:28',
                     'title': None,
                     'value': 92.32678}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-08-08T11:50:04',
                       'title': None,
                       'value': -195.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-08-08T12:13:20',
                       'title': 'iServer Temp.',
                       'value': 76.1},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-08-08T12:11:54',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
5210193840 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5210193840
close session 5210193840
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5020688112
MassSpec Database Version: 16.0
close session 5020688112
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to ba-01-J
setting aliquot to 2728
setting step to 
setting uuid to 154202b1-2d32-47c1-abec-7e295f7e82a1
setting irradpos to ba-01-J
setting extract_device to Extract Device
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_air
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
adding new session for Jan
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x130a72ad0> len t=120
baseline Ar41. v=-0.0994721363384, e=0.00289952706907
get signal data Ar41 H2
Get data signal Ar41 0.0151+/-0.0035 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x139faef90> len t=120
baseline Ar40. v=0.0746939437329, e=0.00418839389369
get signal data Ar40 H1
Get data signal Ar40 0.116+/-0.007 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x139fbe190> len t=120
baseline Ar39. v=-0.0388535747404, e=0.0043847059946
get signal data Ar39 AX
Get data signal Ar39 0.041+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x139fbe350> len t=120
baseline Ar38. v=-0.044035435131, e=0.00164516389651
get signal data Ar38 L1
Get data signal Ar38 0.0071+/-0.0023 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x139fbe510> len t=120
baseline Ar37. v=-0.00668387344789, e=0.00420698649991
get signal data Ar37 L2
Get data signal Ar37 0.055+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x139fbe6d0> len t=120
baseline Ar36. v=7.4172552455e-06, e=2.96378396586e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00359+/-0.00018 len t=400
ba-01-J-2728 added analysis time 0.599044084549s
analysis added to mass spec database
mass spec save time= 0.610
persistence save - dvc
================= post measurement started
create new session 4940662352
close session 4940662352
add to repo msg=modified - jan_unknown400_120.py
add to repo msg=modified - jan_sniffair_x2.py
add to repo msg=modified - jan_pump_ms.py
add to repo msg=modified - jan_pump_extraction_line.py
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.541163304524
Failed to find a valid peak. No peak greater than 1.0. max = 0.142247432309
Failed to find a valid peak. No peak greater than 1.0. max = 0.0184173055455
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-2728.json
add to repo msg=modified - -J-2728.dat.json
add to repo msg=modified - -J-2728.blan.json
add to repo msg=modified - -J-2728.inte.json
add to repo msg=modified - -J-2728.icfa.json
add to repo msg=modified - -J-2728.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air171/ba-01/tags/-J-2728.tags.json
add to repo msg=modified - -J-2728.peak.json
add to repo msg=modified - -J-2728.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air171/ba-01/monitor/-J-2728.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-2728.inte.json
add to repo msg=modified - -J-2728.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-2728.blan.json
commit message=<BLANKS> preceding 
add to repo msg=modified - -J-2728.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x1302903b0>
pushing to remote=origin, url=https://github.com
Smart pull ahead: 0 behind: 0
Up-to-date with origin
no changes to meta repo
create new session 4940662352
add association Jan_air171
get identifier "ba-01-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x137121610>
close session 4940662352
================= post measurement finished
12:19:19 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
12:19:19 -- ******* Post Run Check Passed *******
12:19:19 -- Automated run ba-01-J-2728 success duration: 778.270 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=ba-01-J-2728, duration=778.269697189, md5=c78a166a
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000221967697144
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.88758087158e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.79357147217e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000138998031616
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000128030776978
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000116109848022
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000174999237061
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.58442687988e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.0001220703125
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.48634338379e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.10758972168e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.00014591217041
executed snippet estimated_duration=250.0, duration=0.0291440486908
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000201940536499
executed snippet estimated_duration=4.0, duration=0.00421190261841
Script duration 790.0
Run total estimated duration= 791.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:540.0
pump_ms in script context. using previous estimated duration
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
pump_extraction_line in script context. using previous estimated duration
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.72068786621e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000149965286255
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.0001060962677
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000169038772583
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000147104263306
executed snippet estimated_duration=108.0, duration=0.0178239345551
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=197.4, duration=0.000200986862183
script duration name:unknown120_60 seconds:197.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
unknown120_60 in script context. using previous estimated duration
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
nruns=39 before=5.0, run_dur=22864.0, btw=444.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/AirsCocktails.rem.txt
/Users/jan/PychronDev/experiments/rem/AirsCocktails.ex.txt
doing event level: 3
add run
