do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000149011611938
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.59740447998e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.50475311279e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.60419464111e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=6.19888305664e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.41345977783e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=4.19616699219e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=5.69820404053e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.41345977783e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.3882598877e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=5.60283660889e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=6.5803527832e-05
executed snippet estimated_duration=250.0, duration=0.00731492042542
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000105142593384
executed snippet estimated_duration=4.0, duration=0.000790119171143
Script duration 790.0
Run total estimated duration= 791.000
run duration: 0:13:11
doing event level: 2
09:29:17 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4951197456
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ba-01-J-2727
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-J-2727
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
09:29:17 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.13189,8.64091,0.37632,0.00656,0.07839,0.01350
09:29:17 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
attribute context {'analysis_types': None,
 'frequency': 1,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 1,
 'start_count': 50,
 'teststr': 'CDD.inactive'}
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
attribute context {'analysis_types': None,
 'frequency': 1,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 1,
 'start_count': 50,
 'teststr': 'CDD.deflection==2000'}
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
09:29:17 -- ******* Pre Extraction Check Passed *******
=================================================================================
09:29:17 -- stopping status monitor
stop 4948959792
Status monitor stopped
Status monitor finished
09:29:18 -- starting status monitor
start 4948959792
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
set states for children of I. state=False
set states for children of Q. state=True
set states for children of P. state=True
handle state [('I', False), ('Q', True), ('P', True)]
update switch state I False args=() kw={'refresh': True} ncanvase=2
update switch state Q True args=() kw={'refresh': True} ncanvase=2
update switch state P True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
start extraction
do extraction
Analysis started at 09:29:20.426483
Extraction Started jan_sniffair_x2.py
09:29:20 -- ******* Extraction Started jan_sniffair_x2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x129c6ebf0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.79085540771e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.98566436768e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.9168548584e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.98838043213e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=4.19616699219e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=5.88893890381e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=5.91278076172e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000188112258911
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=5.79357147217e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=6.41345977783e-05
executed snippet estimated_duration=250.0, duration=0.00708198547363
Jan Air Sniff Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.8133392334e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 28.7841961384
Read MinibonePumpTimeFlag ===>> 27.7745511532
Read MinibonePumpTimeFlag ===>> 17.715419054
Read MinibonePumpTimeFlag ===>> 7.63857913017
finished waiting
executed snippet estimated_duration=0, duration=29.2121829987
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.20024108887e-05
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
09:29:50 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
09:29:50 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=2
09:29:51 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=2
09:29:51 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
09:29:51 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=2
09:29:52 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
09:29:52 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
09:29:53 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
09:29:54 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
09:29:54 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-T(Microbone to CO2 Laser) software locked
change switch state (True, False)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, False)]
action=close, ok=True, locked=[True]
executed snippet estimated_duration=0, duration=5.18160104752
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=6.79492950439e-05
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
09:29:54 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
set states for children of L. state=True
handle state [('L', True)]
update switch state L True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
09:29:55 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
09:29:56 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
09:29:57 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0678369999
executed snippet estimated_duration=48.0, duration=17.9081559181
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.00950622559e-05
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
State checksums do not match. Local:899205025 Remote:1616283055
State checksum failed
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
09:30:12 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0614972115
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
09:30:29 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.8347101212
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.48362731934e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=2
09:30:30 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
09:30:31 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01082420349
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
09:30:33 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.44569706917
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000139951705933
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
09:30:34 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00651597977
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
09:30:36 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0653369427
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.8565840721
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000149011611938
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
09:30:53 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.05352211
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
09:31:09 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.8276231289
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=8.60691070557e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=2
09:31:10 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
09:31:11 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00541996956
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
09:31:13 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.40840291977
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000110864639282
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
09:31:14 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.0092279911
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
09:31:16 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0521109104
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.8403041363
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000136137008667
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
09:31:33 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01505017281
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
09:31:35 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (30,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0922000408
close ('S',) {}
close name=S desc=---
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close S ===>> OK
GetIndicatorState S ===>> False
change switch state (True, True)
update switch state S False args=() kw={} ncanvase=2
09:32:06 -- CLOSE  VALVE-S (Microbone to Inlet Pipette)
-------------------------- close S () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (3,) {}
SLEEP 3.0
block started
WaitControl setup for 3.0  
Join finished
block finished. duration 3.03628206253
executed snippet estimated_duration=105.0, duration=36.9022128582
SniffPipette2.py completed successfully
gosub finished
executed snippet estimated_duration=250.0, duration=169.444912195
jan_sniffair_x2.py completed successfully
no extraction action
Requested Output= 0.000
Achieved Output=  0.000
no extraction action
no extraction action
no extraction action
no extraction action
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
not connected to db mysql://janexp@129.138.12.160/labspy
using pymysql
4983472688 connecting to database mysql://janexp@129.138.12.160/labspy
create new session 4983472688
testing database connection get_migrate_version
closing test session
close session 4983472688
connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-08-08T09:04:16',
                    'title': 'iServer Hum.',
                    'value': 54.2}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-08-08T09:30:33',
                     'title': None,
                     'value': 102.45},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-08-08T09:30:37',
                     'title': None,
                     'value': 103.89808}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-08-08T09:31:30',
                       'title': None,
                       'value': -183.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-08-08T09:23:23',
                       'title': 'iServer Temp.',
                       'value': 74.6},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-08-08T09:31:30',
                       'title': None,
                       'value': 18.1111111111111}]}
Extraction Finished
09:32:12 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
09:32:12 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.258926936459
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0553 5.8784 5.9918 6.1938 6.2297 6.6791
Ar39     6.0102 5.7694 6.0559 6.3369 6.1124 6.5656
Ar36     5.6877 5.4384 5.7192 5.9958 5.7674 6.2167
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.035158395898
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=ba-01-J analysis type=blank_air
Measurement Started jan_unknown400_120.py
09:32:12 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.035158395898
GetParameter Source Current Readback ===>> 552.536531770738
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
flush and close file /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
testing...
no interpolation path defined
executed snippet estimated_duration=548.12, duration=0.000144004821777
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2, iso=Ar36
setting isotope det=CDD, iso=Ar35
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02898323e+00]
H1 map mass to dac 39.9624 >> 5.87839
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87835538271) on H1
setting magnet DAC
current  : 5.878355
requested: 5.878355
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87835538271 ===>> OK
set_dac. change=False
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 8.0}
Equilibration Started
09:32:13 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=2
09:32:13 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x123d7bd70>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1268c2050>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1292c07d0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=2
09:32:16 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 8.0sec
sniff (8.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
measuring sniff. ncounts=8.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
09:32:24 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
State checksums do not match. Local:-690571657 Remote:-731428809
State checksum failed
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
09:32:25 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
09:32:25 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000113964080811
executed snippet estimated_duration=4.0, duration=0.000826120376587
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=9.60826873779e-05
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
waiting for write to finish
measurement finished
estimated time: 8.389 actual time: :8.468
flush and close file /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
measuring signal. ncounts=400
Close R ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
09:32:25 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
starting measurement
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=2
09:32:26 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
09:32:27 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
09:32:28 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
09:32:28 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-T(Microbone to CO2 Laser) software locked
change switch state (True, False)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, False)]
action=open, ok=True, locked=[True]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
09:32:29 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -0.003134948343240072}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=5.24592208862
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.90870666504e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=2
09:32:30 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=2
09:32:31 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=2
09:32:32 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=2
09:32:33 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=2
09:32:34 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -0.00099305885346623844}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -0.00044764752928638492}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -0.00027485801680976945}"
Join finished
block finished. duration 15.0597651005
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=2
09:32:49 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
09:32:50 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=19.6902229786
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=24.9490458965
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
09:32:50 -- ******* Post Equilibration Finished *******
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.9203416160127063e-05}"
09:32:51 -- collecting point 25
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 2.5047199019338393e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.0835470122945227e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -3.2279292132950521e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -8.3419008377883455e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 9.1174818512213335e-05}"
09:33:17 -- collecting point 50
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.9143213024028857e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 7.1446677507976458e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.6574609305917946e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.3677062857493964e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.6460603242698708e-05}"
09:33:43 -- collecting point 75
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.0306600257883234e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.3098715086745026e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.4654108119992711e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 2.3877639668220833e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.091723080408395e-06}"
09:34:10 -- collecting point 100
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -5.397335218385159e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 1.8579033311631251e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.3270503973149586e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.8059258279246454e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 9.5777822992312835e-07}"
09:34:36 -- collecting point 125
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -5.0612330328080091e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.663875467994279e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 8.4896666241090707e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 0.00011093052837978931}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 2.3154835889387844e-05}"
09:35:02 -- collecting point 150
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 2.2517303840824193e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.8917119469864021e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 6.3206757601772215e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 2.975889121517103e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -2.8000654016241161e-05}"
09:35:29 -- collecting point 175
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -4.3928160321664097e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.622012520875131e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.2873685168128188e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.3122487331837005e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -2.1179222587560618e-05}"
09:35:55 -- collecting point 200
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -8.1465214575483345e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 3.3527256091763688e-07}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 1.7518112848999365e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -3.2922738140843491e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 2.1647940917306696e-05}"
09:36:21 -- collecting point 225
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.3690081610799504e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 8.2241276575936511e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 8.5974344634469387e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.0504512344531929e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -5.6248406950943708e-05}"
09:36:47 -- collecting point 250
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 1.8235593022474054e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 0.0001116489683859828}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 9.0192720507418986e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -3.1225358529665924e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 1.0692894522580286e-05}"
09:37:14 -- collecting point 275
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 6.8563981552146759e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.4570667634370407e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.1807267624913454e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 1.9837087762964891e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.6480103560800412e-05}"
09:37:40 -- collecting point 300
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.3930616999257025e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.7769963971692158e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 6.2387403879661776e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -2.9917295061081662e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -2.3127267133256939e-05}"
09:38:06 -- collecting point 325
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 5.9492302423361568e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -3.1683054477153686e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.7962288311991677e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 1.4003682510311783e-06}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -2.5547439025563812e-05}"
09:38:33 -- collecting point 350
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.1469083042814188e-06}"
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -2.3670600283209206e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 9.9866954903542004e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 3.1314638126013617e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 7.425447588020828e-06}"
09:38:59 -- collecting point 375
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -4.7873286837817083e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.9561462663081717e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 0.00011038341446409124}"
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
State checksums do not match. Local:2089821428 Remote:1182975282
State checksum failed
set states for children of E. state=True
set states for children of D. state=False
handle state [('E', True), ('D', False)]
update switch state E True args=() kw={'refresh': True} ncanvase=2
update switch state D False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 8.3323073300837041e-05}"
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': -1.2620310119910637e-05}"
09:39:25 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.517
flush and close file /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02898323e+00]
H1 map mass to dac 34.2 >> 5.24050160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.2404707469) on H1
setting magnet DAC
current  : 5.878355
requested: 5.240471
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.2404707469 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.046164247872937464}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06857606263900815}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07076785472160012}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06668441739104278}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06296683503621013}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
09:40:10 -- collecting point 25
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0659649670943847}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0623664863373319}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0636243309451816}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06424513147179933}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06341840592744334}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
09:40:36 -- collecting point 50
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06473584475853947}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.062148919397847495}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06044016797620922}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
State checksums do not match. Local:-339869139 Remote:-88626339
State checksum failed
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05868152317938498}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.058226666366741425}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
09:41:02 -- collecting point 75
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.059316492239287116}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
State checksums do not match. Local:-64319081 Remote:-88626339
State checksum failed
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.061020062925419984}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06191672298784389}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06395083875003887}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0634259181858454}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
09:41:29 -- collecting point 100
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06261810083868168}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06377101837962648}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06349641530072286}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
testing H1<-5.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'H1.bs<-5.0'}
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06430127049575805}"
testing CDD==0.0
attribute context {'analysis_types': None,
 'frequency': 5,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 3,
 'start_count': 0,
 'teststr': 'slope(CDD)==0.0'}
evaluate ot="slope(CDD)==0.0" t="CDD==0.0", ctx="{'CDD': 4.5636740611018024e-05}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.233
flush and close file /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=7.70286369191 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1337d30b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x133916a10>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1337d30b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x133916a10>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1337d30b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x133916a10>]
setting integration time = 0.524288
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02898323e+00]
H1 map mass to dac 39.9624 >> 5.87839
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x1337d30b0>
doing pc
starting peak center. center dac= 5.87835538271 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87836 width=0.03000 (5.86336 - 5.89336)
Moving to starting dac 5.86335538271
setting magnet DAC
current  : 5.240471
requested: 5.863355
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.86335538271 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0700150603792. timeout= 10
Peak center baseline intensity achieved
_do_sweep sm= 5.86335538271, em= 5.89335538271, stm= 0.001
calculated step values: start=5.86335538271, end=5.89335538271, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.863355
requested: 5.863355
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86335538271 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863355
requested: 5.864390
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86438986547 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.864390
requested: 5.865424
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86542434823 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865424
requested: 5.866459
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86645883099 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866459
requested: 5.867493
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86749331375 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867493
requested: 5.868528
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86852779651 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868528
requested: 5.869562
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86956227926 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869562
requested: 5.870597
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87059676202 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870597
requested: 5.871631
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87163124478 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871631
requested: 5.872666
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87266572754 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872666
requested: 5.873700
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8737002103 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873700
requested: 5.874735
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87473469306 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874735
requested: 5.875769
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87576917582 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875769
requested: 5.876804
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87680365857 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876804
requested: 5.877838
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
set states for children of C. state=True
set states for children of B. state=True
handle state [('C', True), ('B', True)]
update switch state C True args=() kw={'refresh': True} ncanvase=2
update switch state B True args=() kw={'refresh': False} ncanvase=2
SetMagnetDAC 5.87783814133 ===>> OK
refresh_canvas_needed fired
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877838
requested: 5.878873
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87887262409 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of D. state=True
handle state [('D', True)]
update switch state D True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878873
requested: 5.879907
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87990710685 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879907
requested: 5.880942
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88094158961 ===>> OK
Magnet settling time: 1.049 0.500
set states for children of I. state=False
set states for children of Q. state=True
set states for children of P. state=True
handle state [('I', False), ('Q', True), ('P', True)]
update switch state I False args=() kw={'refresh': True} ncanvase=2
update switch state Q True args=() kw={'refresh': True} ncanvase=2
update switch state P True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880942
requested: 5.881976
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88197607237 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881976
requested: 5.883011
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88301055513 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883011
requested: 5.884045
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88404503788 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884045
requested: 5.885080
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88507952064 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885080
requested: 5.886114
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8861140034 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886114
requested: 5.887148
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88714848616 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887148
requested: 5.888183
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88818296892 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888183
requested: 5.889217
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88921745168 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889217
requested: 5.890252
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89025193444 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890252
requested: 5.891286
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8912864172 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891286
requested: 5.892321
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89232089995 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892321
requested: 5.893355
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89335538271 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8710207133738361, 5.8785357434339565, 5.8860507734940768], [7.6690398405555671, 10.310383136425253, 7.517612793433547], 5.8817521762996883, 10.310383136425253)
Failed to find a valid peak. No peak greater than 1.0. max = 0.644169284825
Failed to find a valid peak. No peak greater than 1.0. max = 0.1376024962
Failed to find a valid peak. No peak greater than 1.0. max = 0.0207663062797
new center pos Detector(H1) (Ar40) @ 5.87853574343
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87857036178
update mftable H1 Ar40 5.87857036178 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/setupfiles/spectrometer/jan_mftable_archive, universal_newlines=False, shell=None)
Popen(['git', 'cat-file', '--batch'], cwd=/Users/jan/PychronDev/setupfiles/spectrometer/jan_mftable_archive, universal_newlines=False, shell=None)
locally archiving mftable
setting magnet DAC
current  : 5.893355
requested: 5.878536
Delta Dac: 0.014820
Checking detector protection. dv=0.01482
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87853574343 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.644169284825
Failed to find a valid peak. No peak greater than 1.0. max = 0.1376024962
Failed to find a valid peak. No peak greater than 1.0. max = 0.0207663062797
flush and close file /Users/jan/PychronDev/data/isotopes/ed/bb1b13-787d-4193-a467-799fc4b404f8.h5
finished measure script
executed snippet estimated_duration=548.12, duration=619.940290928
jan_unknown400_120.py completed successfully
Measurement Finished
09:42:32 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
09:42:32 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.8835067749e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
09:42:32 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.362314939499
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
09:42:33 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-08-08T09:04:16',
                    'title': 'iServer Hum.',
                    'value': 54.2}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-08-08T09:40:36',
                     'title': None,
                     'value': 91.05},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-08-08T09:40:40',
                     'title': None,
                     'value': 91.95004}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-08-08T09:38:34',
                       'title': None,
                       'value': -185.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-08-08T09:23:23',
                       'title': 'iServer Temp.',
                       'value': 74.6},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-08-08T09:36:30',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
5158596336 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5158596336
close session 5158596336
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4989764432
MassSpec Database Version: 16.0
close session 4989764432
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to ba-01-J
setting aliquot to 2727
setting step to 
setting uuid to edbb1b13-787d-4193-a467-799fc4b404f8
setting irradpos to ba-01-J
setting extract_device to Extract Device
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_air
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
adding new session for Jan
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x13064db90> len t=120
baseline Ar41. v=-0.100095396232, e=0.00282888643128
get signal data Ar41 H2
Get data signal Ar41 0.021+/-0.004 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x129ce9210> len t=120
baseline Ar40. v=0.0651318191669, e=0.0032882552115
get signal data Ar40 H1
Get data signal Ar40 0.156+/-0.007 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x13063df10> len t=120
baseline Ar39. v=-0.0426994930762, e=0.00479580140478
get signal data Ar39 AX
Get data signal Ar39 0.040+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x13064d110> len t=120
baseline Ar38. v=-0.0422596097521, e=0.00180561092287
get signal data Ar38 L1
Get data signal Ar38 0.0079+/-0.0021 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x13064d2d0> len t=120
baseline Ar37. v=-0.00563714986414, e=0.00434798334444
get signal data Ar37 L2
Get data signal Ar37 0.060+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x13064d490> len t=120
baseline Ar36. v=1.85431381138e-05, e=4.49737159256e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00331+/-0.00017 len t=400
ba-01-J-2727 added analysis time 0.621982097626s
analysis added to mass spec database
mass spec save time= 0.630
persistence save - dvc
================= post measurement started
create new session 4948611920
close session 4948611920
add to repo msg=modified - jan_unknown400_120.py
add to repo msg=modified - jan_sniffair_x2.py
add to repo msg=modified - jan_pump_ms.py
add to repo msg=modified - jan_pump_extraction_line.py
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.644169284825
Failed to find a valid peak. No peak greater than 1.0. max = 0.1376024962
Failed to find a valid peak. No peak greater than 1.0. max = 0.0207663062797
Popen(['git', 'fetch', 'origin'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air171, universal_newlines=False, shell=None)
Popen(['git', 'status', '-sb'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air171, universal_newlines=False, shell=None)
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-2727.json
add to repo msg=modified - -J-2727.dat.json
add to repo msg=modified - -J-2727.blan.json
add to repo msg=modified - -J-2727.inte.json
add to repo msg=modified - -J-2727.icfa.json
add to repo msg=modified - -J-2727.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air171/ba-01/tags/-J-2727.tags.json
add to repo msg=modified - -J-2727.peak.json
add to repo msg=modified - -J-2727.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air171/ba-01/monitor/-J-2727.moni.json
commit message=<COLLECTION>
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air171, universal_newlines=False, shell=None)
Popen(['git', 'cat-file', '--batch'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air171, universal_newlines=False, shell=None)
add to repo msg=modified - -J-2727.inte.json
add to repo msg=modified - -J-2727.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-2727.blan.json
commit message=<BLANKS> preceding 
add to repo msg=modified - -J-2727.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x12fea4fb0>
pushing to remote=origin, url=https://github.com
Popen(['git', 'push', 'origin', 'master'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_air171, universal_newlines=False, shell=None)
Popen(['git', 'fetch', 'origin'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Popen(['git', 'status', '-sb'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Smart pull ahead: 0 behind: 0
Up-to-date with origin
Popen(['git', 'diff', 'HEAD', '--name-only'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
no changes to meta repo
Popen(['git', 'push', 'origin', 'master'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
create new session 4948611920
add association Jan_air171
get identifier "ba-01-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1291ed550>
close session 4948611920
================= post measurement finished
09:42:46 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
attribute context {'analysis_types': None,
 'frequency': 1,
 'level': 10,
 'location': u'setupfiles/spectrometer/default_conditionals.yaml',
 'ntrips': 1,
 'start_count': 50,
 'teststr': 'CDD.deflection==2000'}
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
09:42:46 -- ******* Post Run Check Passed *******
09:42:46 -- Automated run ba-01-J-2727 success duration: 809.264 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=ba-01-J-2727, duration=809.264341116, md5=c78a166a
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.00023889541626
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.00271606445e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.00950622559e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.01222229004e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000118970870972
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.48905944824e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.29425048828e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=8.41617584229e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.10758972168e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000104188919067
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000121116638184
executed snippet estimated_duration=250.0, duration=0.0278570652008
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000154972076416
executed snippet estimated_duration=4.0, duration=0.00131607055664
Script duration 790.0
Run total estimated duration= 791.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:540.0
pump_ms in script context. using previous estimated duration
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
pump_extraction_line in script context. using previous estimated duration
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.41074371338e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000114917755127
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=9.58442687988e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000111818313599
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00025486946106
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000103950500488
executed snippet estimated_duration=108.0, duration=0.0145871639252
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=197.4, duration=0.000185966491699
script duration name:unknown120_60 seconds:197.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
unknown120_60 in script context. using previous estimated duration
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
script duration name:unknown120_60 seconds:197.0
script duration name:cocktail_x1 seconds:108.0
Script duration 305.0
Run total estimated duration= 306.000
nruns=39 before=5.0, run_dur=22864.0, btw=444.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/AirsCocktails.rem.txt
/Users/jan/PychronDev/experiments/rem/AirsCocktails.ex.txt
doing event level: 3
add run
