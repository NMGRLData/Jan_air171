do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000196933746338
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.121925354e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.60283660889e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000108957290649
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.98838043213e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.60826873779e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=8.98838043213e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=8.39233398438e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.89301300049e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.60283660889e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.60555267334e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=8.29696655273e-05
executed snippet estimated_duration=250.0, duration=0.0102291107178
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000140905380249
executed snippet estimated_duration=4.0, duration=0.0011248588562
Script duration 790.0
Run total estimated duration= 791.000
run duration: 0:13:11
doing event level: 2
21:06:47 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4956293744
close session 4956293744
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ba-01-J-2736
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-J-2736
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
21:06:47 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.10408,0.11509,-0.09810,-0.02267,-0.05268,0.00237
21:06:47 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
21:06:47 -- ******* Pre Extraction Check Passed *******
=================================================================================
21:06:47 -- stopping status monitor
stop 4944139760
Status monitor stopped
Status monitor finished
21:06:49 -- starting status monitor
start 4944139760
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 21:06:50.603221
Extraction Started jan_sniffair_x2.py
21:06:50 -- ******* Extraction Started jan_sniffair_x2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x1295e4050>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.89165496826e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.31673431396e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.60555267334e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.58171081543e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=8.39233398438e-05
executed snippet estimated_duration=250.0, duration=0.00887203216553
Jan Air Sniff Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.41481781006e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0183680057526
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000205993652344
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
21:06:51 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
21:06:51 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=2
21:06:52 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=2
21:06:52 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
21:06:53 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=2
21:06:53 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
21:06:53 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
21:06:54 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
21:06:55 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
21:06:55 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-T(Microbone to CO2 Laser) software locked
change switch state (True, False)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, False)]
action=close, ok=True, locked=[True]
executed snippet estimated_duration=0, duration=5.065294981
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000194072723389
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
21:06:55 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
21:06:56 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
21:06:57 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
21:06:58 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.024353981
executed snippet estimated_duration=48.0, duration=18.1618480682
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.0001060962677
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
21:07:14 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
set states for children of B. state=True
handle state [('B', True)]
update switch state B True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Join finished
block finished. duration 15.0370810032
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
21:07:30 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.8559691906
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.79492950439e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=2
21:07:31 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
21:07:32 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01850008965
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
21:07:34 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.50220799446
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000187873840332
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
21:07:35 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.02645015717
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
21:07:37 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Join finished
block finished. duration 15.0385580063
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.9263730049
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000178813934326
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
21:07:54 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.022660017
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
21:08:10 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.7778358459
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000148057937622
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=2
21:08:12 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
21:08:12 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00467705727
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
21:08:15 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.42480301857
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000196933746338
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
21:08:15 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01728010178
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
21:08:17 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0483279228
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.8414020538
ExpandPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000117063522339
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
21:08:34 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.02084493637
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
21:08:36 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (30,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
State checksums do not match. Local:-2005431548 Remote:301516047
State checksum failed
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Join finished
block finished. duration 30.0679879189
close ('S',) {}
close name=S desc=---
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close S ===>> OK
GetIndicatorState S ===>> False
change switch state (True, True)
update switch state S False args=() kw={} ncanvase=2
21:09:07 -- CLOSE  VALVE-S (Microbone to Inlet Pipette)
-------------------------- close S () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (3,) {}
SLEEP 3.0
block started
WaitControl setup for 3.0  
Join finished
block finished. duration 3.01334905624
executed snippet estimated_duration=105.0, duration=36.8593299389
SniffPipette2.py completed successfully
gosub finished
executed snippet estimated_duration=250.0, duration=140.469672203
jan_sniffair_x2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
not connected to db mysql://janexp@129.138.12.160/labspy
set states for children of C. state=True
set states for children of H. state=False
handle state [('C', True), ('H', False)]
update switch state C True args=() kw={'refresh': True} ncanvase=2
update switch state H False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
State checksums do not match. Local:196789028 Remote:-1429575278
State checksum failed
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-08-11T21:05:12',
                    'title': 'iServer Hum.',
                    'value': 55.9}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-08-11T21:08:21',
                     'title': None,
                     'value': 89.625},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-08-11T21:08:44',
                     'title': None,
                     'value': 95.28688}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-08-11T16:13:37',
                       'title': None,
                       'value': -193.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-08-11T20:24:51',
                       'title': 'iServer Temp.',
                       'value': 75.0},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-08-11T20:42:40',
                       'title': None,
                       'value': 18.0}]}
Extraction Finished
21:09:13 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
21:09:13 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.370811206739
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0549 5.8785 5.9923 6.1934 6.2297 6.6787
Ar39     6.0098 5.7694 6.0564 6.3365 6.1125 6.5652
Ar36     5.6873 5.4385 5.7198 5.9954 5.7674 6.2163
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.370811206739
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=ba-01-J analysis type=blank_air
Measurement Started jan_unknown400_120.py
21:09:13 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
set states for children of B. state=True
GetYSymmetry ===>> -2.81
set states for children of D. state=True
handle state [('B', True), ('D', True)]
update switch state B True args=() kw={'refresh': True} ncanvase=2
GetZSymmetry ===>> -50.72
update switch state D True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.147042666178
GetParameter Source Current Readback ===>> 553.753036684368
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
flush and close file /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
testing...
no interpolation path defined
executed snippet estimated_duration=548.12, duration=0.000273942947388
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02908323e+00]
H1 map mass to dac 39.9624 >> 5.87849
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87845538212) on H1
setting magnet DAC
current  : 5.878455
requested: 5.878455
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87845538212 ===>> OK
set_dac. change=False
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 8.0}
Equilibration Started
21:09:14 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=2
21:09:14 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x12351f950>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x132dd11d0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x132d93dd0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=2
21:09:17 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 8.0sec
sniff (8.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
measuring sniff. ncounts=8.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
21:09:26 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
21:09:26 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
21:09:26 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.0001540184021
executed snippet estimated_duration=4.0, duration=0.00576400756836
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000138998031616
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
waiting for write to finish
measurement finished
estimated time: 8.389 actual time: :8.463
flush and close file /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
measuring signal. ncounts=400
Close R ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
21:09:27 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
starting measurement
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=2
21:09:27 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
21:09:29 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
21:09:29 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
21:09:30 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-T(Microbone to CO2 Laser) software locked
change switch state (True, False)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, False)]
action=open, ok=True, locked=[True]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open S ===>> OK
set states for children of S. state=True
handle state [('S', True)]
update switch state S True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
21:09:30 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.2729666032434913}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=5.3138320446
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.79085540771e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=2
21:09:32 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
set states for children of I. state=True
handle state [('I', True)]
update switch state I True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=2
21:09:33 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=2
21:09:33 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=2
21:09:35 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=2
21:09:35 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.09532794269015137}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04422202165520025}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.02647688043411697}"
Join finished
block finished. duration 15.0732870102
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=2
21:09:51 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
21:09:51 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=19.8587889671
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=25.1891260147
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
21:09:51 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.01721535859987198}"
21:09:52 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.01503071793082953}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.012867514371381457}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.010872873128454108}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.009444417631571105}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008981011653895407}"
21:10:19 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008526280637930024}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008152298046112325}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007647415270952185}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007377610951005069}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007316937975669073}"
21:10:45 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006961722332954264}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006784321619802016}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006505564285613203}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006209847534767228}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00614173835833556}"
21:11:11 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005701033657867215}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005492487900883813}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005243446715087447}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00518703569862625}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005101775384011672}"
21:11:37 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004913774022065784}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004943434499812357}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004866511237968914}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004878115357351363}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004902571034867469}"
21:12:04 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0048392749275386025}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0047275738250005354}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004788607887746327}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0047114193966549985}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004666859923616854}"
21:12:30 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004601931248092677}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004589040155251109}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004511372397768234}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004421753082606904}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00431649587996414}"
21:12:56 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004282942147578445}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004190888784565117}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004259141494682265}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004165463890045466}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004162925807446973}"
21:13:22 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0040792747640697995}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004064938868745717}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004072895058640434}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004118818016250337}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00407827979852571}"
21:13:49 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004107746311747224}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004105059376791484}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004114254180566818}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004110104536874044}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004132954078709704}"
21:14:15 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00408209284912032}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004078890774578515}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004088142560204805}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004058755145383238}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004066673291196235}"
21:14:41 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004053466885525053}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004019996134599153}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003998191548581103}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003996769378164928}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004015769699305713}"
21:15:08 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003978142928942945}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003943347054410524}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003933552576786172}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003936043170804288}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003892854583386672}"
21:15:34 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038767322216164734}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003916106771799266}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003927190791212454}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003931676333699298}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038598883741427685}"
21:16:00 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003883714334656015}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003870072340529357}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003828894112150144}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003831620094636102}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07544423185268499}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038035299760332732}"
21:16:26 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.395
flush and close file /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02908323e+00]
H1 map mass to dac 34.2 >> 5.24060160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24057074631) on H1
setting magnet DAC
current  : 5.878455
requested: 5.240571
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24057074631 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05313853698571965}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003832638141453952}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05965395601874476}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003832638141453952}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.04496201058804561}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003832638141453952}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.04324532780937677}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038248305043534227}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0480589648503894}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003826457095416033}"
21:17:11 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.060253144701941444}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038275227930087774}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.059781253670218824}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003823911958812184}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.060244905734178504}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038250307001765132}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06279324553545401}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038258951821398585}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06308149965755618}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038235557880921117}"
21:17:37 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06612437406918958}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038243967467367266}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06380254680480112}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038250951700178476}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06517363700311452}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003825684464661293}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0646263291292637}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038261883542839497}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06480708089392442}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038246194871344895}"
21:18:04 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06542088262841769}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003825126996901544}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06617626912631318}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038255740888391873}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06665749882561962}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038259709457276574}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06544904220180188}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003824747444384268}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06382687541342413}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038221490936034483}"
21:18:30 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06477019298357908}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038226533747501073}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06561581466225416}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038217504273061545}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06569204769404552}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038222279586284263}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0660096524428514}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038214187637479018}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.161
flush and close file /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=7.7043897677 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x13153df50>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x13544ec50>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x13153df50>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x13544ec50>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x12f5bcbf0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x13544ec50>]
setting integration time = 0.524288
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02908323e+00]
H1 map mass to dac 39.9624 >> 5.87849
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x13544efb0>
doing pc
starting peak center. center dac= 5.87845538212 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87846 width=0.03000 (5.86346 - 5.89346)
Moving to starting dac 5.86345538212
setting magnet DAC
current  : 5.240571
requested: 5.863455
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.86345538212 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0419035386307. timeout= 10
Peak center baseline intensity achieved
_do_sweep sm= 5.86345538212, em= 5.89345538212, stm= 0.001
calculated step values: start=5.86345538212, end=5.89345538212, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.863455
requested: 5.863455
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86345538212 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863455
requested: 5.864490
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86448986488 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.864490
requested: 5.865524
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86552434764 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865524
requested: 5.866559
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8665588304 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866559
requested: 5.867593
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86759331316 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867593
requested: 5.868628
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86862779592 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868628
requested: 5.869662
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86966227868 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869662
requested: 5.870697
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87069676143 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870697
requested: 5.871731
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87173124419 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871731
requested: 5.872766
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87276572695 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872766
requested: 5.873800
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87380020971 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873800
requested: 5.874835
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87483469247 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874835
requested: 5.875869
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87586917523 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875869
requested: 5.876904
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87690365799 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876904
requested: 5.877938
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87793814074 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877938
requested: 5.878973
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8789726235 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878973
requested: 5.880007
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88000710626 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880007
requested: 5.881042
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88104158902 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881042
requested: 5.882076
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88207607178 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882076
requested: 5.883111
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88311055454 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883111
requested: 5.884145
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8841450373 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884145
requested: 5.885180
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88517952005 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885180
requested: 5.886214
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88621400281 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886214
requested: 5.887248
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88724848557 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887248
requested: 5.888283
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88828296833 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888283
requested: 5.889317
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88931745109 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889317
requested: 5.890352
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89035193385 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890352
requested: 5.891386
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89138641661 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891386
requested: 5.892421
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89242089937 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892421
requested: 5.893455
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89345538212 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8706998711015821, 5.8784253220033857, 5.8861507729051894], [7.6166642411231384, 10.316855926191295, 7.5964753299745116], 5.8821527769132045, 10.316855926191295)
Failed to find a valid peak. No peak greater than 1.0. max = 0.829178273539
Failed to find a valid peak. No peak greater than 1.0. max = 0.136332411213
Failed to find a valid peak. No peak greater than 1.0. max = 0.0161217061515
new center pos Detector(H1) (Ar40) @ 5.878425322
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.8784599397
update mftable H1 Ar40 5.8784599397 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
locally archiving mftable
setting magnet DAC
current  : 5.893455
requested: 5.878425
Delta Dac: 0.015030
Checking detector protection. dv=0.01503
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.878425322 ===>> OK
Magnet settling time: 0.500 0.500
sweep finished
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Magnet settling complete
set_dac. change=True
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.829178273539
Failed to find a valid peak. No peak greater than 1.0. max = 0.136332411213
Failed to find a valid peak. No peak greater than 1.0. max = 0.0161217061515
flush and close file /Users/jan/PychronDev/data/isotopes/c5/524797-47b0-40c1-89d1-4e5a1be1ba1c.h5
finished measure script
executed snippet estimated_duration=548.12, duration=618.046809912
jan_unknown400_120.py completed successfully
Measurement Finished
21:19:32 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
21:19:32 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.40802764893e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
21:19:32 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.343195199966
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
21:19:32 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-08-11T21:18:17',
                    'title': 'iServer Hum.',
                    'value': 55.6}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-08-11T21:18:24',
                     'title': None,
                     'value': 110.625},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-08-11T21:18:48',
                     'title': None,
                     'value': 113.04748}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-08-11T16:13:37',
                       'title': None,
                       'value': -193.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-08-11T20:24:51',
                       'title': 'iServer Temp.',
                       'value': 75.0},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-08-11T20:42:40',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
5135037744 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5135037744
close session 5135037744
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4981684944
MassSpec Database Version: 16.0
close session 4981684944
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to ba-01-J
setting aliquot to 2736
setting step to 
setting uuid to c5524797-47b0-40c1-89d1-4e5a1be1ba1c
setting irradpos to ba-01-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_air
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x13be42d90> len t=120
baseline Ar41. v=-0.0990273395462, e=0.00264120814653
get signal data Ar41 H2
Get data signal Ar41 0.0156+/-0.0035 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x13be42f50> len t=120
baseline Ar40. v=0.0693141436663, e=0.00373856980486
get signal data Ar40 H1
Get data signal Ar40 0.136+/-0.008 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x13be50150> len t=120
baseline Ar39. v=-0.0351645191125, e=0.0051012285824
get signal data Ar39 AX
Get data signal Ar39 0.026+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x13be50310> len t=120
baseline Ar38. v=-0.0248684152968, e=0.00197144382924
get signal data Ar38 L1
Get data signal Ar38 0.0087+/-0.0025 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x13be504d0> len t=120
baseline Ar37. v=-0.0116282945957, e=0.00379822900682
get signal data Ar37 L2
Get data signal Ar37 0.057+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x13be50690> len t=120
baseline Ar36. v=1.11258828918e-05, e=3.9889091771e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00349+/-0.00016 len t=400
ba-01-J-2736 added analysis time 0.532066106796s
analysis added to mass spec database
mass spec save time= 0.544
persistence save - dvc
================= post measurement started
create new session 4942771888
close session 4942771888
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.829178273539
Failed to find a valid peak. No peak greater than 1.0. max = 0.136332411213
Failed to find a valid peak. No peak greater than 1.0. max = 0.0161217061515
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-2736.json
add to repo msg=modified - -J-2736.dat.json
add to repo msg=modified - -J-2736.blan.json
add to repo msg=modified - -J-2736.inte.json
add to repo msg=modified - -J-2736.icfa.json
add to repo msg=modified - -J-2736.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air171/ba-01/tags/-J-2736.tags.json
add to repo msg=modified - -J-2736.peak.json
add to repo msg=modified - -J-2736.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_air171/ba-01/monitor/-J-2736.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-2736.inte.json
add to repo msg=modified - -J-2736.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-2736.blan.json
commit message=<BLANKS> preceding bu-FC-J-8278
add to repo msg=modified - -J-2736.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x12a55b5f0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4942771888
add association Jan_air171
get identifier "ba-01-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x13ceba8d0>
close session 4942771888
================= post measurement finished
21:19:47 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
21:19:47 -- ******* Post Run Check Passed *******
21:19:47 -- Automated run ba-01-J-2736 success duration: 780.356 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=5
update duration runid=ba-01-J-2736, duration=780.355818987, md5=c78a166a
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000260829925537
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.71797180176e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.48362731934e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000123977661133
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.0001060962677
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000134944915771
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.91549682617e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000113964080811
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000216007232666
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=8.51154327393e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000102996826172
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000124931335449
executed snippet estimated_duration=250.0, duration=0.0368587970734
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000254154205322
executed snippet estimated_duration=4.0, duration=0.00582885742188
Script duration 790.0
Run total estimated duration= 791.000
nruns=1 before=5.0, run_dur=791.0, btw=0.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
add run
